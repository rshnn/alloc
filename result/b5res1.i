// ROSHAN PATEL
// CS415: COMPILERS PROJECT 1
// 	 LOCAL REGISTER ALLOCATION
// Output ILOC instructions for report1.i
// Total physical register = 5
// Allocator type: b

	loadI	1020	=> r0
	loadI	4000	=> r2	
	loadI	4	=> r3	
	loadI	1	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	load	r2	=> r4	
	add	r2, r3		=> r2	
	loadI	-4	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	load	r2	=> r4	
	add	r2, r3		=> r2	
	loadI	-8	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	load	r2	=> r4	
	add	r2, r3		=> r2	
	loadI	-12	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	load	r2	=> r4	
	add	r2, r3		=> r2	
	loadI	-16	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	load	r2	=> r4	
	add	r2, r3		=> r2	
	loadI	-20	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	load	r2	=> r4	
	add	r2, r3		=> r2	
	loadI	-24	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	load	r2	=> r4	
	add	r2, r3		=> r2	
	loadI	-28	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	load	r2	=> r4	
	add	r2, r3		=> r2	
	loadI	-32	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	load	r2	=> r4	
	add	r2, r3		=> r2	
	loadI	-36	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	load	r2	=> r4	
	add	r2, r3		=> r3	
	loadI	0	=> r2	
	loadI	-40	=> r1
	add	r0, r1	=> r1
	store	r2	=> r1
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	loadI	-44	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-8	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	loadI	-48	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	add	r2, r3		=> r4	
	loadI	-52	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	mult	r4, r3		=> r4	
	loadI	-8	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-48	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	sub	r3, r2		=> r2	
	loadI	-48	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-52	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	loadI	-56	=> r1
	add	r0, r1	=> r1
	store	r2	=> r1
	loadI	-12	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	add	r3, r2		=> r3	
	mult	r4, r2		=> r4	
	loadI	-12	=> r1
	add	r0, r1	=> r1
	store	r2	=> r1
	loadI	-56	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	loadI	-60	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	loadI	-36	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	add	r2, r4		=> r2	
	loadI	-36	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	loadI	-16	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	add	r3, r4		=> r3	
	loadI	-64	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-60	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	mult	r3, r4		=> r3	
	loadI	-16	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	loadI	-32	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	sub	r2, r4		=> r2	
	loadI	-32	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	loadI	-64	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	loadI	-68	=> r1
	add	r0, r1	=> r1
	store	r2	=> r1
	loadI	-20	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	add	r4, r2		=> r4	
	mult	r3, r2		=> r3	
	loadI	-20	=> r1
	add	r0, r1	=> r1
	store	r2	=> r1
	loadI	-68	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	loadI	-72	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-28	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r2	
	loadI	-28	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-24	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r4	
	loadI	-76	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	loadI	-72	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	mult	r4, r3		=> r4	
	sub	r2, r3		=> r3	
	loadI	-80	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-76	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	loadI	-84	=> r1
	add	r0, r1	=> r1
	store	r2	=> r1
	loadI	-28	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	add	r3, r2		=> r3	
	mult	r4, r2		=> r2	
	loadI	-84	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	loadI	-88	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-20	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r3	
	loadI	16	=> r4	
	rshift	r2, r4		=> r4	
	loadI	-88	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	loadI	-92	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-32	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r2	
	mult	r4, r3		=> r3	
	loadI	-92	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	loadI	-96	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-16	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	sub	r4, r3		=> r3	
	loadI	-36	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	add	r2, r4		=> r2	
	loadI	-100	=> r1
	add	r0, r1	=> r1
	store	r2	=> r1
	loadI	-96	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	mult	r2, r4		=> r4	
	loadI	-12	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	add	r3, r2		=> r2	
	loadI	-100	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	loadI	-104	=> r1
	add	r0, r1	=> r1
	store	r2	=> r1
	loadI	-48	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	add	r3, r2		=> r3	
	mult	r4, r2		=> r2	
	loadI	-104	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	loadI	-108	=> r1
	add	r0, r1	=> r1
	store	r2	=> r1
	loadI	-8	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	sub	r4, r2		=> r2	
	loadI	1024	=> r4	
	store	r3	=> r4	
	loadI	1028	=> r4	
	loadI	-108	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	store	r3	=> r4	
	loadI	1032	=> r4	
	store	r2	=> r4	
	output	1024

	output	1028

	output	1032

