// ROSHAN PATEL
// CS415: COMPILERS PROJECT 1
// 	 LOCAL REGISTER ALLOCATION
// Output ILOC instructions for report2.i
// Total physical register = 5
// Allocator type: b

	loadI	1020	=> r0
	loadI	1024	=> r2	
	loadI	1028	=> r3	
	load	r2	=> r2	
	load	r3	=> r3	
	loadI	4	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	loadI	1024	=> r4	
	store	r2	=> r4	
	add	r2, r3		=> r2	
	loadI	-4	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r4	
	store	r2	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r2	
	loadI	-4	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r4	
	store	r2	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r2	
	loadI	-4	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r4	
	store	r2	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r2	
	loadI	-4	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r4	
	store	r2	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r2	
	loadI	-4	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r4	
	store	r2	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r2	
	loadI	-4	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r4	
	store	r2	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r2	
	loadI	-4	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r4	
	store	r2	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r2	
	loadI	-4	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r4	
	store	r2	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r2	
	loadI	-4	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r4, r3		=> r4	
	store	r2	=> r4	
	loadI	0	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r3
	add	r2, r3		=> r3	
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r2
	add	r4, r2		=> r4	
	store	r3	=> r4	
	loadI	1024	=> r4	
	load	r4	=> r3	
	add	r4, r2		=> r4	
	loadI	-8	=> r1
	add	r0, r1	=> r1
	store	r3	=> r1
	load	r4	=> r3	
	add	r4, r2		=> r2	
	load	r2	=> r4	
	loadI	-12	=> r1
	add	r0, r1	=> r1
	store	r4	=> r1
	loadI	-8	=> r1
	add	r0, r1	=> r1
	load	r1	=> r4
	add	r4, r3		=> r3	
	load	r2	=> r2	
	add	r2, r2		=> r2	
	mult	r3, r2		=> r2	
	loadI	2048	=> r3	
	store	r2	=> r3	
	output	2048

