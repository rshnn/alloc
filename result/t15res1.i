// ROSHAN PATEL
// CS415: COMPILERS PROJECT 1
// 	 LOCAL REGISTER ALLOCATION
// Output ILOC instructions for report1.i
// Total physical register = 15
// Allocator type: t

	loadI	1020	=> r0
	loadI	4000	=> r3
	loadI	4	=> r4
	loadI	1	=> r5
	load	r3	=> r6
	add	r3 ,r4	=> r3
	load	r3	=> r7
	add	r3 ,r4	=> r3
	load	r3	=> r8
	add	r3 ,r4	=> r3
	load	r3	=> r9
	add	r3 ,r4	=> r3
	load	r3	=> r10
	add	r3 ,r4	=> r3
	load	r3	=> r11
	add	r3 ,r4	=> r3
	load	r3	=> r12
	add	r3 ,r4	=> r3
	load	r3	=> r13
	add	r3 ,r4	=> r1
	loadI	0	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	load	r1	=> r3
	loadI	0	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	add	r1 ,r4	=> r1
	loadI	-4	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	load	r1	=> r14
	loadI	-4	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	add	r1 ,r4	=> r1
	loadI	-8	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	0	=> r1
	loadI	-12	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	add	r6 ,r7	=> r4
	mult	r5 ,r7	=> r1
	loadI	-16	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	sub	r14 ,r6	=> r1
	loadI	-20	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	add	r4 ,r8	=> r1
	loadI	-24	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	-16	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	mult	r1 ,r8	=> r1
	loadI	-28	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	-20	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	add	r1 ,r3	=> r1
	loadI	-32	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	-24	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	add	r1 ,r9	=> r1
	loadI	-36	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	-28	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	mult	r1 ,r9	=> r1
	loadI	-40	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	-32	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	sub	r1 ,r13	=> r1
	loadI	-44	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	-36	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	add	r1 ,r10	=> r1
	loadI	-48	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	-40	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	mult	r1 ,r10	=> r1
	loadI	-52	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	loadI	-44	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	add	r1 ,r12	=> r4
	loadI	-48	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	add	r1 ,r11	=> r5
	loadI	-52	=> r1
	add	r0, r1	=> r1
	load	r1	=> r1
	mult	r1 ,r11	=> r6
	sub	r4 ,r11	=> r1
	loadI	-56	=> r2
	add	r0, r2	=> r2
	store	r1	=> r2
	add	r5 ,r12	=> r5
	mult	r6 ,r12	=> r6
	add	r4 ,r10	=> r4
	loadI	16	=> r10
	rshift	r6 ,r10	=> r6
	add	r5 ,r13	=> r5
	mult	r6 ,r13	=> r6
	sub	r4 ,r9	=> r4
	add	r5 ,r3	=> r5
	mult	r6 ,r3	=> r3
	add	r4 ,r8	=> r4
	add	r5 ,r14	=> r5
	mult	r3 ,r14	=> r3
	sub	r4 ,r7	=> r4
	loadI	1024	=> r6
	store	r5	=> r6
	loadI	1028	=> r5
	store	r3	=> r5
	loadI	1032	=> r3
	store	r4	=> r3
	output	1024
	output	1028
	output	1032
